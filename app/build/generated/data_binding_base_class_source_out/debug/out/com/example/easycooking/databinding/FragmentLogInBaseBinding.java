// Generated by view binder compiler. Do not edit!
package com.example.easycooking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.easycooking.R;
import com.google.android.gms.common.SignInButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogInBaseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bottoneAccedi;

  @NonNull
  public final SignInButton bottoneGmail2;

  @NonNull
  public final EditText emailAccedi;

  @NonNull
  public final TextView emailLog;

  @NonNull
  public final EditText pswAccedi;

  @NonNull
  public final TextView registratiAccedi1;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  private FragmentLogInBaseBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button bottoneAccedi, @NonNull SignInButton bottoneGmail2,
      @NonNull EditText emailAccedi, @NonNull TextView emailLog, @NonNull EditText pswAccedi,
      @NonNull TextView registratiAccedi1, @NonNull TextView textView11,
      @NonNull TextView textView12) {
    this.rootView = rootView;
    this.bottoneAccedi = bottoneAccedi;
    this.bottoneGmail2 = bottoneGmail2;
    this.emailAccedi = emailAccedi;
    this.emailLog = emailLog;
    this.pswAccedi = pswAccedi;
    this.registratiAccedi1 = registratiAccedi1;
    this.textView11 = textView11;
    this.textView12 = textView12;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in_base, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottone_accedi;
      Button bottoneAccedi = rootView.findViewById(id);
      if (bottoneAccedi == null) {
        break missingId;
      }

      id = R.id.bottone_gmail2;
      SignInButton bottoneGmail2 = rootView.findViewById(id);
      if (bottoneGmail2 == null) {
        break missingId;
      }

      id = R.id.email_accedi;
      EditText emailAccedi = rootView.findViewById(id);
      if (emailAccedi == null) {
        break missingId;
      }

      id = R.id.email_log;
      TextView emailLog = rootView.findViewById(id);
      if (emailLog == null) {
        break missingId;
      }

      id = R.id.psw_accedi;
      EditText pswAccedi = rootView.findViewById(id);
      if (pswAccedi == null) {
        break missingId;
      }

      id = R.id.registrati_accedi1;
      TextView registratiAccedi1 = rootView.findViewById(id);
      if (registratiAccedi1 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = rootView.findViewById(id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = rootView.findViewById(id);
      if (textView12 == null) {
        break missingId;
      }

      return new FragmentLogInBaseBinding((ConstraintLayout) rootView, bottoneAccedi, bottoneGmail2,
          emailAccedi, emailLog, pswAccedi, registratiAccedi1, textView11, textView12);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
