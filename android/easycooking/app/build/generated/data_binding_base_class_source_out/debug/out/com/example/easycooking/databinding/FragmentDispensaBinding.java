// Generated by view binder compiler. Do not edit!
package com.example.easycooking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.easycooking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDispensaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bt;

  @NonNull
  public final Button btCerca;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView13;

  @NonNull
  public final RecyclerView rv;

  @NonNull
  public final RecyclerView rv1;

  private FragmentDispensaBinding(@NonNull ConstraintLayout rootView, @NonNull Button bt,
      @NonNull Button btCerca, @NonNull ImageView imageView, @NonNull ImageView imageView13,
      @NonNull RecyclerView rv, @NonNull RecyclerView rv1) {
    this.rootView = rootView;
    this.bt = bt;
    this.btCerca = btCerca;
    this.imageView = imageView;
    this.imageView13 = imageView13;
    this.rv = rv;
    this.rv1 = rv1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDispensaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDispensaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dispensa, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDispensaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt;
      Button bt = rootView.findViewById(id);
      if (bt == null) {
        break missingId;
      }

      id = R.id.bt_cerca;
      Button btCerca = rootView.findViewById(id);
      if (btCerca == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageView13;
      ImageView imageView13 = rootView.findViewById(id);
      if (imageView13 == null) {
        break missingId;
      }

      id = R.id.rv;
      RecyclerView rv = rootView.findViewById(id);
      if (rv == null) {
        break missingId;
      }

      id = R.id.rv1;
      RecyclerView rv1 = rootView.findViewById(id);
      if (rv1 == null) {
        break missingId;
      }

      return new FragmentDispensaBinding((ConstraintLayout) rootView, bt, btCerca, imageView,
          imageView13, rv, rv1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
